managed;

define behavior for ZI_RAP_Travel_3LT alias Travel
implementation in class zbp_i_rap_travel_3lt unique
persistent table zrap_atrav_3lt
lock master
authorization master ( instance )
etag master LocalLastChangedAt // Optimistic locking
{
  create;
  update;
  delete;
  association _Booking { create; }

  field ( numbering : managed, readonly ) TravelUuid; //UUID-based scenario (numering managed and read only)
  field ( readonly ) TravelId, TotalPrice, TravelStatus;
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;
  field ( mandatory ) AgencyId, CustomerId;

  // For approving and rejecting travels, actions with dynamic feature control are defined
  //They both return $self with cardinality one as the result
  //$self means that the instance of the same type is returned on which the operation is performed
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  //recalculation of total price, internal action is defined
  internal action recalcTotalPrice;

  //Determination for setting initial status to default the status to N whenever a new instance is created
  determination setInitialStatus on modify { create; }
  // The CalculateTotalPriceDetermination is used to update the total price whenever the booking fee or currency code is changed
  determination calculateTotalPrice on modify { field BookingFee, CurrencyCode; }
  // The calculateTraveiId is used to determine the travelID when a new instance is created
  determination calculateTravelId on save { create; }

  //Below validations are used to validate the input of the fields agency ID, customer ID, being date and end date --> all triggered on save
  validation validateAgency on save { field AgencyId; create; }
  validation validateCustomer on save { field CustomerId; create; }
  validation validateDates on save { field BeginDate, EndDate; create; }

  mapping for zrap_atrav_3lt //Field mapping between CDS view and underlying database table
  {
    TravelUuid = travel_uuid;
    TravelId = travel_id;
    AgencyId = agency_id;
    CustomerId = customer_id;
    BeginDate = begin_date;
    EndDate = end_date;
    BookingFee = booking_fee;
    TotalPrice = total_price;
    CurrencyCode = currency_code;
    Description = description;
    TravelStatus = overall_status;
    CreatedBy = created_by;
    CreatedAt = created_at;
    LastChangedBy = last_changed_by;
    LastChangedAt = last_changed_at;
    LocalLastChangedAt = local_last_changed_at;
  }
}

define behavior for ZI_RAP_Booking_3LT alias Booking
implementation in class zbp_i_rap_booking_3lt unique
persistent table zrap_abook_3lt
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt // Optimistic locking
{
  update;
  delete;
  association _Travel;

  field ( numbering : managed, readonly ) BookingUid;
  field ( readonly ) TravelUuid, BookingId;
  field ( readonly ) LastChangedBy, CreatedBy, LocalLastChangedAt;

  determination calculateBookingID on modify { create; }
  determination calculateTotalPrice on modify { field FlightPrice, CurrencyCode; }

  mapping for zrap_abook_3lt //Field mapping between CDS view and underlying database table
  {
    BookingUid = booking_uid;
    TravelUuid = travel_uuid;
    BookingId = booking_id;
    CustomerId = customer_id;
    CarrierId = carrier_id;
    ConnectionId = connection_id;
    FlightDate = flight_date;
    FlightPrice = flight_price;
    CurrencyCode = currency_code;
    CreatedBy = created_by;
    LastChangedBy = last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
  }

}